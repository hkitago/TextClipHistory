/*/
///  popup.css
///  TextClipHistory
///
///  Created by Hiroyuki KITAGO on 2024/11/01.
/*/
@keyframes popIn {
  from {
    opacity: 0;
    transform: scale(0.5);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

:root {
    color-scheme: light dark;
}

* {
  -webkit-tap-highlight-color:rgb(0 0 0/0);
  -webkit-user-select:none;
  -webkit-touch-callout:none;
}

html {
  font: -apple-system-body;
}

body {
  width: 400px; /* for iPad Popover */
  margin: 0;
  padding: 15px 0;
  font-size: 94%;
  background-color: rgb(240 242 242);
  font-family: system-ui;
}

.rtl {
  direction: rtl;
  text-align: right;
}

header {
  margin: 0 15px 15px;
}

#history-toolbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 0 15px;
  width: calc(100% - 2 * 15px);
  overflow: hidden;
}

#history-toolbar button {
  -webkit-appearance: none;
  appearance: none;
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  margin: 0;
  font-size: 1em;
}

#history-options {
  display: flex;
}

#history-options button {
  margin: 0 0 0 5px;
}

.rtl #history-options button {
  margin: 0 5px 0 0;
}

#history-options button.selected {
  color: rgb(70 146 254);
}

#history-options button:not(.selected) {
  opacity: 0.5;
  color: inherit;
  -webkit-text-fill-color: inherit;
}

.delete-button {
  white-space: nowrap;
  color: rgb(70 146 254);
}

.toggle-option {
  display: flex;
  align-items: center;
  white-space: nowrap;
}

.toggle-option::before {
  visibility: hidden;
  content: '✔︎';
  font-size: 0.75rem;
  color: rgb(70 146 254);
  margin: 0 0.25rem;
}

.toggle-option.selected::before {
  visibility: visible;
}

.toggle-option.selected {
  color: rgb(70 146 254);
  cursor: initial;
}

main {
  min-height: 38px;
}

main > ul {
  list-style: none;
  padding: 0;
  margin: 0 15px 15px;
  overflow: hidden;
  border-radius: 10px;
}

main > ul > li {
  min-height: 38px;
  background-color: rgb(254 255 255);
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

main > ul > li:not(:last-child) {
  margin-bottom: 1px;
}

main > ul > li.selected {
  background-color: rgb(210 209 215);
}

main > ul > li > div {
  margin: 10px 15px;
  overflow-wrap: break-word;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  white-space: pre-wrap;
  flex:1;
}

main > ul > li > img {
  margin-right: 15px;
  width: auto;
  height: 18px;
}

main > ul > li > img.iconPin {
  display: none;
}

body.rtl main > ul > li > img {
  margin-right: 0px;
  margin-left: 20px;
}

main > ul > li.history-item[data-pinned="true"] > img.iconPin,
main > ul.isEditMode > li.history-item[data-pinned="false"] > img.iconPin {
  display: initial;
  opacity:1;
}

main > ul.isEditMode > li > img.iconCopy {
  display: none;
}

/* Pin-Toggle related animation */
.history-item {
  opacity: 1;
  transition: opacity 0.5s ease;
}

.history-item.fade-out {
  opacity: 0;
}

.history-item.fade-in {
  opacity: 1;
}

main > div {
  margin: 0 35px;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

footer {
  margin: 0 15px 5px;
}

footer > div {
  margin: 0 15px;
  cursor: pointer;
  color: rgb(70 146 254);
}

#editDone {
  display: none;
}

@media (hover: hover) and (pointer: fine) {
  #history-options button:hover:not(.selected) {
    opacity: 1;
    color: rgb(70 146 254);
  }
  
  .delete-button:hover {
    opacity: 0.5;
  }
  
  main > ul > li.hover {
    background-color: rgb(210 209 215);
    cursor: pointer;
  }
  
  main > ul > li > img:hover {
    opacity: 1;
  }
  
  main > ul > li.hover > img {
    display: inline-block;
  }
  
  main > ul > li.hover > img.iconCopy {
    opacity: 1;
  }
  
  main > ul > li.hover > img.iconCopy.fadeIn {
    opacity: 0;
    animation: popIn 0.3s ease-out forwards;
  }

  main > ul > li > img.hover {
    opacity: 1;
  }

  footer > div.hover {
    opacity: 0.5;
  }
}

@media (prefers-color-scheme: dark) {
  body {
    background-color: rgb(35 35 33);
  }

  main > ul > li {
    background-color: rgb(44 43 45);
  }

  @media (hover: hover) and (pointer: fine) {
    main > ul > li.hover {
      background-color: rgb(58 57 59);
    }
  }

  main > ul > li.selected {
    background-color: rgb(58 57 59);
  }

  main > ul > li > img {
    filter: invert(1);
  }

}
